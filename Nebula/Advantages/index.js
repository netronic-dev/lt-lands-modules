import style from './style.module.scss';

import Image from 'next/image';
import { useState } from 'react';

const Advantages = (props) => {
    const [activeTab, setActiveTab] = useState('Lightweight');

    const handleChangeActiveTab = (e) => {
        setActiveTab(e.target.id);
        console.log(e.target);
    };

    const face_icon = (
        <svg
            width='96'
            height='96'
            viewBox='0 0 96 96'
            fill='none'
            xmlns='http://www.w3.org/2000/svg'
            className={`${activeTab === 'Lightweight'
                ? style.active_svg_icon
                : style.svg_icon
                } `}
            onClick={handleChangeActiveTab}
            id='Lightweight'
        >
            <path
                d='M66.1184 39.2C67.5514 39.2 68.7858 38.7157 69.8216 37.7471C70.8575 36.7783 71.3754 35.5317 71.3754 34.0071C71.3754 32.4824 70.8681 31.225 69.8537 30.235C68.8391 29.245 67.6154 28.75 66.1824 28.75C64.6577 28.75 63.4004 29.2343 62.4104 30.203C61.4204 31.1717 60.9254 32.4184 60.9254 33.943C60.9254 35.4677 61.4097 36.725 62.3784 37.715C63.3471 38.705 64.5938 39.2 66.1184 39.2ZM29.8184 39.2C31.343 39.2 32.6004 38.7157 33.5904 37.7471C34.5804 36.7783 35.0754 35.5317 35.0754 34.0071C35.0754 32.4824 34.5911 31.225 33.6224 30.235C32.6537 29.245 31.407 28.75 29.8824 28.75C28.4494 28.75 27.215 29.2343 26.1791 30.203C25.1433 31.1717 24.6254 32.4184 24.6254 33.943C24.6254 35.4677 25.1326 36.725 26.1471 37.715C27.1617 38.705 28.3854 39.2 29.8184 39.2ZM48.0004 73.85C51.9421 73.85 55.8837 72.9104 59.8254 71.0313C63.7671 69.1521 67.1129 66.0584 69.8629 61.75C70.1379 61.2917 70.1379 60.7646 69.8629 60.1688C69.5879 59.5729 69.0654 59.275 68.2954 59.275C68.1182 59.275 67.8997 59.3438 67.6399 59.4813C67.3802 59.6188 67.2046 59.7792 67.1129 59.9625C65.0046 63.1709 62.3233 65.7146 59.0691 67.5938C55.815 69.4729 52.1025 70.4125 47.9316 70.4125C43.9441 70.4125 40.3004 69.4729 37.0004 67.5938C33.7004 65.7146 30.9962 63.1709 28.8879 59.9625C28.8348 59.7792 28.707 59.6188 28.5044 59.4813C28.3017 59.3438 28.04 59.275 27.7191 59.275C27.0316 59.275 26.5275 59.55 26.2066 60.1C25.8858 60.65 25.9087 61.2459 26.2754 61.8875C29.0254 66.1042 32.3483 69.1521 36.2441 71.0313C40.14 72.9104 44.0587 73.85 48.0004 73.85ZM48.0609 95.85C41.3777 95.85 35.1566 94.5946 29.3977 92.0838C23.6388 89.5728 18.5815 86.1423 14.2259 81.7922C9.87031 77.4419 6.43551 72.3876 3.92146 66.6292C1.40741 60.8709 0.150391 54.6462 0.150391 47.9552C0.150391 41.3558 1.40581 35.1504 3.91665 29.3388C6.42759 23.5272 9.85812 18.4666 14.2083 14.1569C18.5585 9.84708 23.6128 6.43515 29.3712 3.9211C35.1295 1.40705 41.3542 0.150024 48.0452 0.150024C54.6446 0.150024 60.85 1.40545 66.6616 3.91629C72.4732 6.42722 77.5338 9.83484 81.8435 14.1391C86.1533 18.4435 89.5653 23.5051 92.0793 29.3239C94.5934 35.1428 95.8504 41.348 95.8504 47.9395C95.8504 54.6228 94.595 60.8438 92.0841 66.6027C89.5732 72.3616 86.1656 77.4104 81.8613 81.7491C77.5569 86.0879 72.4953 89.5227 66.6765 92.0536C60.8576 94.5846 54.6525 95.85 48.0609 95.85ZM48.0672 92.825C60.4893 92.825 71.0546 88.4486 79.7629 79.6957C88.4712 70.9429 92.8254 60.3554 92.8254 47.9332C92.8254 35.5111 88.4712 24.9459 79.7629 16.2375C71.0546 7.52919 60.4893 3.17502 48.0672 3.17502C35.645 3.17502 25.0575 7.52919 16.3047 16.2375C7.55183 24.9459 3.17539 35.5111 3.17539 47.9332C3.17539 60.3554 7.55183 70.9429 16.3047 79.6957C25.0575 88.4486 35.645 92.825 48.0672 92.825Z'
                fill='white'
            />
        </svg>
    );

    const face_icon_mob = (
        <svg
            width='96'
            height='96'
            viewBox='0 0 96 96'
            fill='none'
            xmlns='http://www.w3.org/2000/svg'
            className={style.svg_icon}
        >
            <path
                d='M66.1184 39.2C67.5514 39.2 68.7858 38.7157 69.8216 37.7471C70.8575 36.7783 71.3754 35.5317 71.3754 34.0071C71.3754 32.4824 70.8681 31.225 69.8537 30.235C68.8391 29.245 67.6154 28.75 66.1824 28.75C64.6577 28.75 63.4004 29.2343 62.4104 30.203C61.4204 31.1717 60.9254 32.4184 60.9254 33.943C60.9254 35.4677 61.4097 36.725 62.3784 37.715C63.3471 38.705 64.5938 39.2 66.1184 39.2ZM29.8184 39.2C31.343 39.2 32.6004 38.7157 33.5904 37.7471C34.5804 36.7783 35.0754 35.5317 35.0754 34.0071C35.0754 32.4824 34.5911 31.225 33.6224 30.235C32.6537 29.245 31.407 28.75 29.8824 28.75C28.4494 28.75 27.215 29.2343 26.1791 30.203C25.1433 31.1717 24.6254 32.4184 24.6254 33.943C24.6254 35.4677 25.1326 36.725 26.1471 37.715C27.1617 38.705 28.3854 39.2 29.8184 39.2ZM48.0004 73.85C51.9421 73.85 55.8837 72.9104 59.8254 71.0313C63.7671 69.1521 67.1129 66.0584 69.8629 61.75C70.1379 61.2917 70.1379 60.7646 69.8629 60.1688C69.5879 59.5729 69.0654 59.275 68.2954 59.275C68.1182 59.275 67.8997 59.3438 67.6399 59.4813C67.3802 59.6188 67.2046 59.7792 67.1129 59.9625C65.0046 63.1709 62.3233 65.7146 59.0691 67.5938C55.815 69.4729 52.1025 70.4125 47.9316 70.4125C43.9441 70.4125 40.3004 69.4729 37.0004 67.5938C33.7004 65.7146 30.9962 63.1709 28.8879 59.9625C28.8348 59.7792 28.707 59.6188 28.5044 59.4813C28.3017 59.3438 28.04 59.275 27.7191 59.275C27.0316 59.275 26.5275 59.55 26.2066 60.1C25.8858 60.65 25.9087 61.2459 26.2754 61.8875C29.0254 66.1042 32.3483 69.1521 36.2441 71.0313C40.14 72.9104 44.0587 73.85 48.0004 73.85ZM48.0609 95.85C41.3777 95.85 35.1566 94.5946 29.3977 92.0838C23.6388 89.5728 18.5815 86.1423 14.2259 81.7922C9.87031 77.4419 6.43551 72.3876 3.92146 66.6292C1.40741 60.8709 0.150391 54.6462 0.150391 47.9552C0.150391 41.3558 1.40581 35.1504 3.91665 29.3388C6.42759 23.5272 9.85812 18.4666 14.2083 14.1569C18.5585 9.84708 23.6128 6.43515 29.3712 3.9211C35.1295 1.40705 41.3542 0.150024 48.0452 0.150024C54.6446 0.150024 60.85 1.40545 66.6616 3.91629C72.4732 6.42722 77.5338 9.83484 81.8435 14.1391C86.1533 18.4435 89.5653 23.5051 92.0793 29.3239C94.5934 35.1428 95.8504 41.348 95.8504 47.9395C95.8504 54.6228 94.595 60.8438 92.0841 66.6027C89.5732 72.3616 86.1656 77.4104 81.8613 81.7491C77.5569 86.0879 72.4953 89.5227 66.6765 92.0536C60.8576 94.5846 54.6525 95.85 48.0609 95.85ZM48.0672 92.825C60.4893 92.825 71.0546 88.4486 79.7629 79.6957C88.4712 70.9429 92.8254 60.3554 92.8254 47.9332C92.8254 35.5111 88.4712 24.9459 79.7629 16.2375C71.0546 7.52919 60.4893 3.17502 48.0672 3.17502C35.645 3.17502 25.0575 7.52919 16.3047 16.2375C7.55183 24.9459 3.17539 35.5111 3.17539 47.9332C3.17539 60.3554 7.55183 70.9429 16.3047 79.6957C25.0575 88.4486 35.645 92.825 48.0672 92.825Z'
                fill='white'
            />
        </svg>
    );

    const rectangle_icon = (
        <svg
            width='86'
            height='86'
            viewBox='0 0 86 86'
            fill='none'
            xmlns='http://www.w3.org/2000/svg'
            className={`${activeTab === 'Robustness'
                ? style.active_svg_icon
                : style.svg_icon
                } `}
            onClick={handleChangeActiveTab}
            id='Robustness'
        >
            <path
                d='M0.650391 3.67502C0.650391 2.9119 0.963754 2.21698 1.59048 1.59025C2.2173 0.963434 2.91227 0.650024 3.67539 0.650024V3.67502H0.650391ZM0.650391 48.5V37.3625H3.67539V48.5H0.650391ZM14.9504 85.35V82.325H26.0879V85.35H14.9504ZM0.650391 26.0875V14.95H3.67539V26.0875H0.650391ZM37.5004 3.67502V0.650024H48.6379V3.67502H37.5004ZM82.3254 3.67502V0.650024C83.0885 0.650024 83.7834 0.963434 84.4102 1.59025C85.037 2.21698 85.3504 2.9119 85.3504 3.67502H82.3254ZM3.67539 85.35C2.91227 85.35 2.2173 85.0366 1.59048 84.4098C0.963754 83.7831 0.650391 83.0882 0.650391 82.325H3.67539V85.35ZM0.650391 71.05V59.9125H3.67539V71.05H0.650391ZM14.9504 3.67502V0.650024H26.0879V3.67502H14.9504ZM37.5004 85.35V82.325H48.6379V85.35H37.5004ZM82.3254 48.5V37.3625H85.3504V48.5H82.3254ZM82.3254 85.35V82.325H85.3504C85.3504 83.15 85.037 83.8604 84.4102 84.4563C83.7834 85.0521 83.0885 85.35 82.3254 85.35ZM82.3254 24.7125V13.575H85.3504V24.7125H82.3254ZM82.3254 72.425V61.2875H85.3504V72.425H82.3254ZM59.9129 85.35V82.325H71.0504V85.35H59.9129ZM59.9129 3.67502V0.650024H71.0504V3.67502H59.9129ZM25.7553 63.9C24.8083 63.9 23.9624 63.5271 23.2176 62.7813C22.4728 62.0356 22.1004 61.1893 22.1004 60.2423V25.7549C22.1004 24.8079 22.4733 23.962 23.2191 23.2172C23.9648 22.4724 24.8112 22.1 25.7582 22.1H60.2455C61.1925 22.1 62.0384 22.4729 62.7832 23.2187C63.528 23.9644 63.9004 24.8108 63.9004 25.7578V60.2451C63.9004 61.1921 63.5275 62.038 62.7817 62.7828C62.036 63.5276 61.1896 63.9 60.2426 63.9H25.7553ZM25.1254 60.875H60.8754V25.125H25.1254V60.875Z'
                fill='white'
            />
        </svg>
    );

    const plus_icon = (
        <svg
            width='74'
            height='82'
            viewBox='0 0 74 82'
            fill='none'
            xmlns='http://www.w3.org/2000/svg'
            className={`${activeTab === 'Safety' ? style.active_svg_icon : style.svg_icon
                } `}
            onClick={handleChangeActiveTab}
            id='Safety'
        >
            <path
                d='M32.8066 48.6938V58.25C32.8066 59.4149 33.2171 60.4051 34.0381 61.2206C34.8591 62.036 35.8559 62.4438 37.0287 62.4438C38.2015 62.4438 39.2118 62.036 40.0598 61.2206C40.9077 60.4051 41.3316 59.4149 41.3316 58.25V48.6938H50.7504C51.9535 48.6938 52.9762 48.2833 53.8183 47.4623C54.6605 46.6414 55.0816 45.6445 55.0816 44.4717C55.0816 43.2989 54.6605 42.2886 53.8183 41.4407C52.9762 40.5927 51.9535 40.1688 50.7504 40.1688H41.3316V30.75C41.3316 29.5469 40.9117 28.5243 40.0719 27.6821C39.232 26.8399 38.2122 26.4188 37.0125 26.4188C35.8128 26.4188 34.8119 26.8399 34.0098 27.6821C33.2077 28.5243 32.8066 29.5469 32.8066 30.75V40.1688H23.2504C22.0855 40.1688 21.0953 40.5887 20.2798 41.4285C19.4644 42.2683 19.0566 43.2881 19.0566 44.4879C19.0566 45.6877 19.4644 46.6886 20.2798 47.4907C21.0953 48.2927 22.0855 48.6938 23.2504 48.6938H32.8066ZM7.57539 81.35C5.60456 81.35 3.87435 80.6052 2.38477 79.1157C0.895182 77.6261 0.150391 75.8959 0.150391 73.925V29.7188C0.150391 28.464 0.380979 27.3411 0.842154 26.35C1.30333 25.3589 2.08107 24.511 3.17539 23.8063L32.6004 1.60002C33.8617 0.591691 35.3229 0.0875244 36.9839 0.0875244C38.6449 0.0875244 40.1171 0.591691 41.4004 1.60002L70.8254 23.8063C71.9197 24.511 72.6975 25.3589 73.1586 26.35C73.6198 27.3411 73.8504 28.464 73.8504 29.7188V73.925C73.8504 75.8959 73.1056 77.6261 71.616 79.1157C70.1264 80.6052 68.3962 81.35 66.4254 81.35H7.57539ZM7.57539 78.325H66.4254C67.7087 78.325 68.7629 77.9125 69.5879 77.0875C70.4129 76.2625 70.8254 75.2084 70.8254 73.925V29.65C70.8254 28.9167 70.665 28.2292 70.3441 27.5875C70.0233 26.9459 69.5879 26.4417 69.0379 26.075L39.6129 4.21252C38.8796 3.57086 38.0087 3.25002 37.0004 3.25002C35.9921 3.25002 35.1212 3.57086 34.3879 4.21252L4.96289 26.0292C4.41289 26.3959 3.97747 26.9001 3.65664 27.5417C3.33581 28.1834 3.17539 28.8709 3.17539 29.6042V73.925C3.17539 75.2084 3.58789 76.2625 4.41289 77.0875C5.23789 77.9125 6.29206 78.325 7.57539 78.325Z'
                fill='white'
            />
        </svg>
    );

    const lamp_icon = (
        <svg
            width='96'
            height='70'
            viewBox='0 0 96 70'
            fill='none'
            xmlns='http://www.w3.org/2000/svg'
            className={`${activeTab === 'Convenience'
                ? style.active_svg_icon
                : style.svg_icon
                } `}
            onClick={handleChangeActiveTab}
            id='Convenience'
        >
            <path
                d='M14.3121 67.8251C9.54544 62.875 6.01628 57.6501 3.72461 52.1501C1.43294 46.6501 0.287109 40.6 0.287109 34C0.287109 27.4 1.43294 21.35 3.72461 15.85C6.01628 10.35 9.54544 5.12505 14.3121 0.175049L16.7871 2.65005C12.3871 6.95838 9.11003 11.8167 6.95586 17.225C4.80169 22.6334 3.72461 28.225 3.72461 34C3.72461 39.7751 4.80169 45.3667 6.95586 50.7751C9.11003 56.1834 12.3871 61.0417 16.7871 65.3501L14.3121 67.8251ZM24.6246 57.5126C21.4163 54.0292 18.9642 50.4084 17.2684 46.6501C15.5725 42.8917 14.7246 38.675 14.7246 34C14.7246 29.3251 15.5725 25.1084 17.2684 21.35C18.9642 17.5917 21.4163 13.925 24.6246 10.35L26.9621 12.825C24.3038 15.6667 22.1725 18.8521 20.5684 22.3813C18.9642 25.9105 18.1621 29.7834 18.1621 34C18.1621 38.2167 18.9642 42.0896 20.5684 45.6188C22.1725 49.148 24.3038 52.3334 26.9621 55.175L24.6246 57.5126ZM44.5621 56.55C44.0121 53.6167 43.1184 51.1188 41.8809 49.0563C40.6434 46.9938 39.36 45.023 38.0309 43.1438C36.7017 41.2646 35.51 39.3855 34.4559 37.5063C33.4017 35.6271 32.8746 33.4042 32.8746 30.8375C32.8746 26.7125 34.3642 23.1605 37.3434 20.1813C40.3225 17.2021 43.8746 15.7125 47.9996 15.7125C52.1246 15.7125 55.6767 17.2021 58.6559 20.1813C61.635 23.1605 63.1246 26.7125 63.1246 30.8375C63.1246 33.3125 62.5975 35.5126 61.5434 37.4375C60.4892 39.3625 59.2975 41.2646 57.9684 43.1438C56.6392 45.023 55.3559 46.9938 54.1184 49.0563C52.8809 51.1188 51.9871 53.6167 51.4371 56.55H44.5621ZM44.6996 69.8876V64.8H51.2996V69.8876H44.6996ZM71.7871 57.5126L69.3121 55.175C71.9704 52.3334 74.1017 49.148 75.7059 45.6188C77.31 42.0896 78.1121 38.2167 78.1121 34C78.1121 29.7834 77.31 25.9105 75.7059 22.3813C74.1017 18.8521 71.9704 15.6667 69.3121 12.825L71.7871 10.35C74.9038 13.925 77.31 17.5917 79.0059 21.35C80.7017 25.1084 81.5496 29.3251 81.5496 34C81.5496 38.675 80.7017 42.8917 79.0059 46.6501C77.31 50.4084 74.9038 54.0292 71.7871 57.5126ZM81.9621 67.8251L79.4871 65.3501C83.8871 61.0417 87.1642 56.1834 89.3184 50.7751C91.4725 45.3667 92.5496 39.7751 92.5496 34C92.5496 28.225 91.4725 22.6334 89.3184 17.225C87.1642 11.8167 83.8871 6.95838 79.4871 2.65005L81.9621 0.175049C86.6371 5.12505 90.1434 10.35 92.4809 15.85C94.8184 21.35 95.9871 27.4 95.9871 34C95.9871 40.6 94.8184 46.6501 92.4809 52.1501C90.1434 57.6501 86.6371 62.875 81.9621 67.8251Z'
                fill='white'
            />
        </svg>
    );

    const iconArr = [face_icon, rectangle_icon, plus_icon, lamp_icon];
    const iconArr_mob = [face_icon_mob, rectangle_icon, plus_icon, lamp_icon];

    return (
        <section className={style.advantages}>
            <div className='container'>
                <h2 className={style.title}>{props.title}</h2>
                <div className={style.content}>
                    <ul className={style.tabs_list}>
                        {props.data.map((item, index) => (
                            <li
                                className={`${style.tab} ${activeTab === item.tab
                                    ? style.active_tab
                                    : ''
                                    }`}
                                id={item.tab}
                                onClick={handleChangeActiveTab}
                                key={index}
                            >
                                {item.tab}
                            </li>
                        ))}
                    </ul>
                    <div className={style.tabs_description}>
                        {props.data.map((item, index) => (
                            <div
                                className={style.description_row}
                                key={index}
                                onClick={handleChangeActiveTab}
                                id={item.tab}
                            >
                                <div
                                    className={style.description_icon}
                                    onClick={handleChangeActiveTab}
                                    id={item.tab}
                                >
                                    {iconArr[index]}
                                </div>
                                <div
                                    className={`${style.tab_content} ${activeTab === item.tab
                                        ? style.active_tab_content
                                        : ''
                                        }`}
                                >
                                    <p
                                        onClick={handleChangeActiveTab}
                                        id={item.tab}
                                        className={style.description_text}
                                    >
                                        {item.tab === activeTab
                                            ? item.text
                                            : item.text_short}
                                    </p>
                                </div>
                            </div>
                        ))}
                    </div>
                    <div className={style.bg_image}>
                        <Image src={props.image} alt='bg_granade' />
                    </div>
                </div>
                <div className={style.content_mobile}>
                    {props.data.map((item, index) => (
                        <div className={style.content_wrapper} key={index}>
                            <div className={style.tabs_row}>
                                <span
                                    className={style.tab}
                                >
                                    {item.tab}
                                </span>
                                <div className={style.description_icon}>
                                    {iconArr_mob[index]}
                                </div>
                            </div>
                            <div
                                className={style.tab_content}
                            >
                                <p className={style.description_text}>
                                    {item.text}
                                </p>
                            </div>
                        </div>
                    ))}
                </div>
            </div>
        </section>
    );
};

export default Advantages;
